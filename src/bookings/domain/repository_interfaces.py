# Слой domain: контракты репозиториев, абстрактные интерфейсы репозиториев (protocols/ABC)
from __future__ import annotations

from typing import Optional, Protocol, runtime_checkable, Iterable, Tuple
from datetime import date

from .entities import Booking
from .value_objects import StayPeriod


@runtime_checkable
class IBookingRepository(Protocol):
    """Контракт хранилища бронирований."""
    def get_by_id(self, booking_id: int) -> Optional[Booking]: ...
    def create(self, booking: Booking) -> Booking: ...
    def update(self, booking: Booking) -> Booking: ...
    def list_by_guest(self, guest_id: int, active_only: bool = False) -> list[Booking]: ...
    def list_requests_for_host(self, host_id: int) -> list[Booking]: ...
    def list_for_accommodation_confirmed(self, accommodation_id: int) -> list[Booking]: ...
    def find_overlaps(
        self, accommodation_id: int, period: StayPeriod, exclude_booking_id: Optional[int] = None
    ) -> list[Booking]: ...
    def list_in_period_for_guest(self, guest_id: int, start: date, end: date) -> list[Booking]: ...